package butterfish

import (
	"bytes"
	"encoding/hex"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
)

var EXAMPLES []string = []string{
	"1b5b3f323030346c0d0d0a",
	"1b5b316d1b5b336d251b5b32336d1b5b316d1b5b306d20202020202020202020202020202020202020202020202020202020202020202020200d200d",
	"0d1b5b306d1b5b32336d1b5b32346d1b5b4a1b511b5b33356d7e2f62757474657266697368201b5b33326de190851b5b33376d20f09f90a020301b52201b5b4b1b5b3f3230303468",

	"1b5b3f32356c1b5b4a1b5b366e1b5b3f323568",
	"1b5b3f32356c0a1b5b470a1b5b470a1b5b470a1b5b470a1b",

	"31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d202039383620207461696c202d6e20313030202d66202f7661722f746d702f627574746572666973682e6c6f671b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d202039393120206578706f7274204f50454e41495f4150495f4b45593d736b2d3450303246524947466351477463612e2e1b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d20203939322020626673681b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d20203939352020727573742d616e616c797a65721b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d2020393937202062667368202d76761b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d20203939392020676974207374617475731b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d20313030302020657869741b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d203130303120202e2f62696e2f62757474657266697368207368656c6c202d7676761b5b6d1b5b31420d1b5b3b313b33383b353b3136313b34383b353b3233366d3e1b5b6d1b5b3b34383b353b3233366d201b5b6d1b5b3b313b33383b353b3235343b34383b353b3233366d203130303220205053313d2427257b5c30333351257d27245053312427f09f90a0257b20253f5c30333352257d20271b5b6d0d1b5b3531431b5b3b6d200d1b5b3531431b5b3b33383b353b35396de294821b5b6d1b5b32420d1b5b32431b5b3f323568",
	"1b5b3f32356c0d1b5b32431b5b3f323568",
	"1b5b3f32356c1b5b31410d1b5b3b6d200d1b5b32431b5b3b33383b353b3134346d3333362f333336202b531b5b6d1b5b3b33383b353b35396d201b5b6d1b5b3b33383b353b35396de29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e29480e294801b5b6d1b5b3b6d201b5b31420d1b5b32431b5b3f323568",
	"1b5b3f32356c1b5b33410d1b5b3b313b33383b353b3136313b34383b353b3233366d3e1b5b6d1b5b3b34383b353b3233366d201b5b6d1b5b3b313b33383b353b3235343b34383b353b3233366d203130303120202e2f62696e2f62757474657266697368207368656c6c202d7676761b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d203130303220205053313d2427257b5c30333351257d27245053312427f09f90a0257b20253f5c30333352257d20271b5b6d1b5b32420d1b5b32431b5b3f323568",
	"1b5b3f32356c1b5b34410d1b5b3b313b33383b353b3136313b34383b353b3233366d3e1b5b6d1b5b3b34383b353b3233366d201b5b6d1b5b3b313b33383b353b3235343b34383b353b3233366d20313030302020657869741b5b6d1b5b31420d1b5b3b34383b353b3233366d201b5b6d1b5b3b6d201b5b3b6d203130303120202e2f62696e2f62757474657266697368207368656c6c202d7676761b5b6d1b5b33420d1b5b32431b5b3f323568",
}

func TestPrettyHex(t *testing.T) {
	buf := bytes.Buffer{}
	buf.WriteString("\x1b[31mHello, World!\x1b[0m")
	parsed := prettyHex(buf.Bytes(), 80)

	// parsed should include SGR twice
	assert.Equal(t, 2, strings.Count(parsed, "SGR"))
}

func TestPrettyHexExamples(t *testing.T) {
	for i, example := range EXAMPLES {
		// interpret example string as hex
		// each 2 characters is a byte
		hexBytes, err := hex.DecodeString(example)
		if err != nil {
			t.Errorf("Error decoding hex string %d: %v", i, err)
		}
		prettyHex(hexBytes, 80)
	}
}
